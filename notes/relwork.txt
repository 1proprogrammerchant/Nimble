Why not use SGX monotonic counter service?
  - Slow
  - Requires connecting to Intel after reboots
  - Removing BIOS battery or reinstalling SGX software deletes all counters
  - Can be exhausted due to wear (ROTE estimates a few days at high throughput
    or a few years at very low troughput). Very problematic in cloud setting.


ROTE

  - IDEA: Counter service kept in a distributed system made up of n nodes
    - Each node is an SGX enclave.
    - All-to-all communication, they exchange their monotonic counters
    - Retrieve counter from all

  - Challenges:
    - Network partitions are tough.
      - What is the min number of nodes available needed to provide liveness
    
    - Coordinated enclave restarts. Does this affect Nimble? I think not since
      the ledger is not kept in enclaves.

    - How to distinguish between 2 enclave instances running in the same 
      machine? Do we care in Nimble? For example, client runs 1 binary and Azure
      runs the clients' binary as well, concurrently. 
    
    - How to establish the distributed system / group. 
