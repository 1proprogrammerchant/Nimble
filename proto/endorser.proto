syntax = "proto3";

package endorser_proto;

service EndorserCall {
  // Protocol Endpoints
  rpc GetPublicKey(GetPublicKeyReq) returns (GetPublicKeyResp);
  rpc NewLedger(NewLedgerReq) returns (NewLedgerResp);
  rpc ReadLatest(ReadLatestReq) returns (ReadLatestResp);
  rpc Append(AppendReq) returns (AppendResp);
}

message GetPublicKeyReq {
}

message GetPublicKeyResp {
  bytes pk = 1;
}

message NewLedgerReq {
  bytes handle = 1;
}

message NewLedgerResp {
  bytes signature = 1;
}

message ReadLatestReq {
  bytes handle = 1;
  bytes nonce = 2;
}

message ReadLatestResp {
  bytes tail_hash = 1;
  uint64 height = 2;
  bytes signature = 3;
}

message AppendReq {
  bytes handle = 1;
  bytes block_hash = 2;
  bytes cond_tail_hash = 3;  // Ideally optional
}

message AppendResp {
  bytes tail_hash = 1;
  uint64 height = 2;
  bytes signature = 3;
}
